! This is a sample input file for famuls.

  obj algorithms
    obj steady_diffusion
      obj utorso ! instance
        ! the algorithm should work with submeshes of this mesh
        param gmesh = m1
        ! and here are the submeshes on which it should operate
        param gsubmeshes = sm1
        !
        obj gcell_groups
          obj gg1
            param implementation = default
            param material = generic_heat_diffusion
          end
        end
        !
        param les = default_les
        obj essential_bcs
          param ebc_file = utorso.ebc
        end
        obj adapt
          param adaptive = true
        end
      end
    end
    obj hexvue
      obj hexvue
        obj gcell_groups
          obj gg1
            param implementation = default
          end
        end
        param hexvue_file = utorso.hvu
      end
    end
    obj gradation
      obj utorso
        param mesh_size_func = 2 + ((((x-45)^2))+((y+68)^2)+((z-290)^2))/10000
      end
    end
    obj errest
      obj utorso
        obj gcell_groups
          obj gg1
            param implementation = default
            param material = generic_heat_diffusion
          end
        end
      end
    end
    obj refine
      obj utorso
        param true_hierarchical = false
        param errestim = energy
        param ref_fraction = 0.2
      end
    end
  end

  obj gmeshes
    obj m1
      param fen_file = utorso.fen
      param gsubmeshes = sm1
    end
  end

  obj gsubmeshes
    obj sm1
      param gcell_groups = gg1
    end
  end

  obj gcell_groups
    obj gg1
      param type = solid_t4
      param conn_file = utorso-gg1.conn
    end
  end

  obj materials
    obj generic_heat_diffusion
      param type = diffusion_iso
      param conductivity = rand(1000)
      ! source location 81.590000;-21.250000;335.00000
      param internal_heat_generation_density = 100000/(10+((2*(x-69)^2))+(8*(y+68)^2)+(10*(z-290)^2)) - 100000/(10+((2*(x-30)^2))+(8*(y+68)^2)+(10*(z-290)^2))
    end
  end

  obj les
    obj default_les
      param fles_solver = spetsc ! smeschach ! 
    end
  end


