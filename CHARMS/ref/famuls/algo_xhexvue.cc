/*--------------------------------------------------------------------------
--                                                                        --
--         (F)ramework for (A)daptive (MUL)tiphysics (S)imulations        --
--            Copyright (C) 2001, Petr Krysl (pkrysl@ucsd.edu).           --
--                                                                        --
--                 [Pronounce `famulus': scholar's helper]                --
--                                                                        --
--                                                                        --
--  This program is free software; you can redistribute it and/or modify  --
--  it under the terms of the GNU General Public License as published by  --
--  the Free Software Foundation; either version 2 of the License, or     --
--  (at your option) any later version.                                   --
--                                                                        --
--------------------------------------------------------------------------*/
#include "famuls.h"
#include <cstdlib>
#include "bfun_set.h"
#include "algo_xhexvue.h"


void 
ALGO_XHEXVUE::write (PROTO_BASE *proto, double time)
{
  char buf[1024];
  int n_output_values = 0;

  SMART_HANDLE<LOGGER_STREAM> lsb
    = this->mgr()->logger("xhexvue postprocessing " + _xhexvue_file, true);
  
  FILE *fp = ckit_io_open_stream ((char *)_xhexvue_file.c_str (), "w");
  CHECK (fp, EXCEPTION_NULL_PTR,;);
  
  ckit_iobuf_t IOB = ckit_io_new_buffer (fp);
  CHECK (IOB, EXCEPTION_NULL_PTR,;);
  
  ckit_io_put_line (IOB, "! XTRA HEXVUE file (C) 1995-2001 Petr Krysl.");
  ckit_io_put_line (IOB, "!   Generated by FAMULS (C) 2002 Petr Krysl.");
  sprintf (buf, "Simulation: %s \t Time: %f ", this->name ().c_str(), time);
  ckit_io_put_line (IOB, buf);
  n_output_values = _quants.size(); // number of quantities
  
  sprintf (buf, "%d ! # of values per vertex", n_output_values);
  ckit_io_put_line (IOB, buf);
  
  list<string>::iterator q = _quants.begin(); 
  for (int c = 0; c < n_output_values; c++) {
    
    sprintf (buf, "%s", (char *) (*q).c_str());
    q++;
    ckit_io_put_line (IOB, buf);
  }
  
  ckit_io_put_line (IOB, "! END OF HEADER");
  
  PROTO_XHEXVUE _proto_xhexvue (this);
  _proto_xhexvue.write_xhexvue_data  (IOB, proto, _quants); //Here is the trouble: Ashi
  ckit_io_put_line (IOB, "END ! HEXVUE file.");
  
  ckit_io_delete_buffer (IOB);
  fclose (fp);

  *lsb << "done" << endl;
}

void 
ALGO_XHEXVUE::write (PROTO_BASE *proto)
{
  write(proto,0);
}
